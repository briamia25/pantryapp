type PantryItem
  @model
  @auth(rules: [
    { allow: public, operations: [create, read, update] },
    { allow: private, operations: [create, read, update] }
  ])
{
  id: ID!
  name: String!
  category: String
  quantity: Int
  image: String 

  restockRequests: [RestockRequest] @hasMany(indexName: "byItem", fields: ["id"])
  consumptionLogs: [ConsumptionLog] @hasMany(indexName: "byItem", fields: ["id"])
}

type RestockRequest
  @model
  @auth(rules: [
    { allow: public, operations: [create, read] },         
    { allow: private, operations: [create, read, update] }     
  ])
{
  id: ID!
  itemID: ID! @index(name: "byItem")
  itemName: String!
  reason: String
  date: AWSDateTime!
  filled: Boolean @default(value: "false")
  requestedBy: String
}

type ConsumptionLog
  @model
  @auth(rules: [
    { allow: public, operations: [create, read] },
    { allow: private, operations: [create, read, update] }
  ])
{
  id: ID! @primaryKey
  itemID: ID! @index(name: "byItem")
  item: PantryItem @hasOne(fields: ["itemID"])
  consumedBy: String
  amount: Int
  date: AWSDateTime
}
